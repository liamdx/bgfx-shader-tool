static const uint8_t vs_cubes_440[10358] =
{
	0x56, 0x53, 0x48, 0x0b, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x8b, 0xef, 0x49, 0x00, 0x00, 0x63, 0x28, // VSH........I..c(
	0x00, 0x00, 0x23, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x34, 0x34, 0x30, 0x0a, 0x23, // ..#version 440.#
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, // define texture2D
	0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // Lod       textur
	0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, // eLod.#define tex
	0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // ture2DGrad      
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, // textureGrad.#def
	0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, // ine texture2DPro
	0x6a, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, // jLod   texturePr
	0x6f, 0x6a, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, // ojLod.#define te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, 0x20, // xture2DProjGrad 
	0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x47, 0x72, 0x61, 0x64, //  textureProjGrad
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x43, 0x75, 0x62, 0x65, 0x4c, 0x6f, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, // CubeLod     text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, // ureLod.#define t
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x75, 0x62, 0x65, 0x47, 0x72, 0x61, 0x64, 0x20, 0x20, // extureCubeGrad  
	0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x47, 0x72, 0x61, 0x64, 0x0a, 0x23, 0x64, //   textureGrad.#d
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x33, 0x44, 0x20, // efine texture3D 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, //          texture
	0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, // .#define texture
	0x32, 0x44, 0x4c, 0x6f, 0x66, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x74, 0x65, 0x78, 0x74, // 2DLofOffset text
	0x75, 0x72, 0x65, 0x4c, 0x6f, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x0a, 0x23, 0x64, 0x65, // ureLodOffset.#de
	0x66, 0x69, 0x6e, 0x65, 0x20, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x69, // fine attribute i
	0x6e, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, // n.#define varyin
	0x67, 0x20, 0x6f, 0x75, 0x74, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, 0x67, // g out.#define bg
	0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, // fxShadow2D(_samp
	0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x20, 0x20, 0x20, 0x20, // ler, _coord)    
	0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, //  vec4_splat(text
	0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, // ure(_sampler, _c
	0x6f, 0x6f, 0x72, 0x64, 0x29, 0x29, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x20, 0x62, // oord)).#define b
	0x67, 0x66, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x32, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x28, // gfxShadow2DProj(
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, // _sampler, _coord
	0x29, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x74, 0x65, 0x78, // ) vec4_splat(tex
	0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, // tureProj(_sample
	0x72, 0x2c, 0x20, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x29, 0x29, 0x0a, 0x61, 0x74, 0x74, 0x72, // r, _coord)).attr
	0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, // ibute vec4 a_col
	0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x76, // or0;.attribute v
	0x65, 0x63, 0x33, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, // ec3 a_position;.
	0x76, 0x61, 0x72, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, 0x63, // varying vec4 v_c
	0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x6e, 0x73, 0x74, // olor0;.vec3 inst
	0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, // Mul(vec3 _vec, m
	0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, // at3 _mtx) { retu
	0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, // rn ( (_vec) * (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, // mtx) ); }.vec3 i
	0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x5f, 0x6d, 0x74, 0x78, // nstMul(mat3 _mtx
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, // , vec3 _vec) { r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, // eturn ( (_mtx) *
	0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  (_vec) ); }.vec
	0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // 4 instMul(vec4 _
	0x76, 0x65, 0x63, 0x2c, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, // vec, mat4 _mtx) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, // { return ( (_vec
	0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x6d, 0x74, 0x78, 0x29, 0x20, 0x29, 0x3b, 0x20, 0x7d, 0x0a, // ) * (_mtx) ); }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x28, 0x6d, 0x61, 0x74, // vec4 instMul(mat
	0x34, 0x20, 0x5f, 0x6d, 0x74, 0x78, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x76, 0x65, // 4 _mtx, vec4 _ve
	0x63, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x28, 0x20, 0x28, 0x5f, // c) { return ( (_
	0x6d, 0x74, 0x78, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x5f, 0x76, 0x65, 0x63, 0x29, 0x20, 0x29, 0x3b, // mtx) * (_vec) );
	0x20, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x63, 0x70, 0x28, 0x66, 0x6c, 0x6f, //  }.float rcp(flo
	0x61, 0x74, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // at _a) { return 
	0x31, 0x2e, 0x30, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x72, // 1.0/_a; }.vec2 r
	0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, // cp(vec2 _a) { re
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, // turn vec2(1.0)/_
	0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, // a; }.vec3 rcp(ve
	0x63, 0x33, 0x20, 0x5f, 0x61, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // c3 _a) { return 
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, // vec3(1.0)/_a; }.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x63, 0x70, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x61, // vec4 rcp(vec4 _a
	0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, // ) { return vec4(
	0x31, 0x2e, 0x30, 0x29, 0x2f, 0x5f, 0x61, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // 1.0)/_a; }.vec2 
	0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, // vec2_splat(float
	0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, //  _x) { return ve
	0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, // c2(_x, _x); }.ve
	0x63, 0x33, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, // c3 vec3_splat(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // oat _x) { return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, //  vec3(_x, _x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, // ); }.vec4 vec4_s
	0x70, 0x6c, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, // plat(float _x) {
	0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, //  return vec4(_x,
	0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, //  _x, _x, _x); }.
	0x75, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, // uvec2 uvec2_spla
	0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, // t(uint _x) { ret
	0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x32, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, // urn uvec2(_x, _x
	0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, 0x65, 0x63, 0x33, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, // ); }.uvec3 uvec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, // _splat(uint _x) 
	0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, // { return uvec3(_
	0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x75, 0x76, // x, _x, _x); }.uv
	0x65, 0x63, 0x34, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // ec4 uvec4_splat(
	0x75, 0x69, 0x6e, 0x74, 0x20, 0x5f, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, // uint _x) { retur
	0x6e, 0x20, 0x75, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x2c, 0x20, // n uvec4(_x, _x, 
	0x5f, 0x78, 0x2c, 0x20, 0x5f, 0x78, 0x29, 0x3b, 0x20, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x34, 0x20, // _x, _x); }.mat4 
	0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x34, // mtxFromRows(vec4
	0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, //  _0, vec4 _1, ve
	0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, 0x29, 0x0a, // c4 _2, vec4 _3).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, // {.return transpo
	0x73, 0x65, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, // se(mat4(_0, _1, 
	0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, // _2, _3) );.}.mat
	0x34, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, // 4 mtxFromCols(ve
	0x63, 0x34, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x31, 0x2c, 0x20, // c4 _0, vec4 _1, 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x33, // vec4 _2, vec4 _3
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x28, // ).{.return mat4(
	0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x2c, 0x20, 0x5f, 0x33, 0x29, 0x3b, // _0, _1, _2, _3);
	0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, // .}.mat3 mtxFromR
	0x6f, 0x77, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, 0x2c, 0x20, 0x76, 0x65, 0x63, // ows(vec3 _0, vec
	0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x32, 0x29, 0x0a, 0x7b, // 3 _1, vec3 _2).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, // .return transpos
	0x65, 0x28, 0x6d, 0x61, 0x74, 0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, // e(mat3(_0, _1, _
	0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, 0x6d, 0x74, 0x78, // 2) );.}.mat3 mtx
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x30, // FromCols(vec3 _0
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, // , vec3 _1, vec3 
	0x5f, 0x32, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, // _2).{.return mat
	0x33, 0x28, 0x5f, 0x30, 0x2c, 0x20, 0x5f, 0x31, 0x2c, 0x20, 0x5f, 0x32, 0x29, 0x3b, 0x0a, 0x7d, // 3(_0, _1, _2);.}
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, // .uniform vec4 u_
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // viewRect;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x78, // m vec4 u_viewTex
	0x65, 0x6c, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, // el;.uniform mat4
	0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, //  u_view;.uniform
	0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x3b, //  mat4 u_invView;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, // .uniform mat4 u_
	0x70, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, // proj;.uniform ma
	0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, // t4 u_invProj;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x76, 0x69, 0x65, // iform mat4 u_vie
	0x77, 0x50, 0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // wProj;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, // at4 u_invViewPro
	0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, // j;.uniform mat4 
	0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5b, 0x33, 0x32, 0x5d, 0x3b, 0x0a, 0x75, 0x6e, 0x69, // u_model[32];.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, // form mat4 u_mode
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x6d, // lView;.uniform m
	0x61, 0x74, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, // at4 u_modelViewP
	0x72, 0x6f, 0x6a, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // roj;.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x66, 0x34, 0x3b, 0x0a, 0x76, // 4 u_alphaRef4;.v
	0x65, 0x63, 0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, 0x28, 0x66, 0x6c, // ec4 encodeRE8(fl
	0x6f, 0x61, 0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // oat _r).{.float 
	0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, // exponent = ceil(
	0x6c, 0x6f, 0x67, 0x32, 0x28, 0x5f, 0x72, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // log2(_r) );.retu
	0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x5f, 0x72, 0x20, 0x2f, 0x20, 0x65, 0x78, 0x70, // rn vec4(_r / exp
	0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x2c, 0x20, 0x30, 0x2e, // 2(exponent)., 0.
	0x30, 0x0a, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x0a, 0x2c, 0x20, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, // 0., 0.0., (expon
	0x65, 0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2f, 0x20, 0x32, // ent + 128.0) / 2
	0x35, 0x35, 0x2e, 0x30, 0x0a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // 55.0.);.}.float 
	0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x45, 0x38, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, // decodeRE8(vec4 _
	0x72, 0x65, 0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, // re8).{.float exp
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x2a, // onent = _re8.w *
	0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x3b, 0x0a, //  255.0 - 128.0;.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, 0x65, 0x38, 0x2e, 0x78, 0x20, 0x2a, 0x20, // return _re8.x * 
	0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, // exp2(exponent);.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x47, 0x42, // }.vec4 encodeRGB
	0x45, 0x38, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // E8(vec3 _rgb).{.
	0x76, 0x65, 0x63, 0x34, 0x20, 0x72, 0x67, 0x62, 0x65, 0x38, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, // vec4 rgbe8;.floa
	0x74, 0x20, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, // t maxComponent =
	0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x2c, //  max(max(_rgb.x,
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x7a, //  _rgb.y), _rgb.z
	0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, // );.float exponen
	0x74, 0x20, 0x3d, 0x20, 0x63, 0x65, 0x69, 0x6c, 0x28, 0x6c, 0x6f, 0x67, 0x32, 0x28, 0x6d, 0x61, // t = ceil(log2(ma
	0x78, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, // xComponent) );.r
	0x67, 0x62, 0x65, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x20, // gbe8.xyz = _rgb 
	0x2f, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, // / exp2(exponent)
	0x3b, 0x0a, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, 0x77, 0x20, 0x3d, 0x20, 0x28, 0x65, 0x78, 0x70, // ;.rgbe8.w = (exp
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x2b, 0x20, 0x31, 0x32, 0x38, 0x2e, 0x30, 0x29, 0x20, 0x2f, // onent + 128.0) /
	0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, //  255.0;.return r
	0x67, 0x62, 0x65, 0x38, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, // gbe8;.}.vec3 dec
	0x6f, 0x64, 0x65, 0x52, 0x47, 0x42, 0x45, 0x38, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, // odeRGBE8(vec4 _r
	0x67, 0x62, 0x65, 0x38, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x78, // gbe8).{.float ex
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x65, 0x38, 0x2e, // ponent = _rgbe8.
	0x77, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x35, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x32, 0x38, 0x2e, // w * 255.0 - 128.
	0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x5f, 0x72, // 0;.vec3 rgb = _r
	0x67, 0x62, 0x65, 0x38, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x65, 0x78, 0x70, 0x32, 0x28, // gbe8.xyz * exp2(
	0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // exponent);.retur
	0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x65, 0x6e, // n rgb;.}.vec3 en
	0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x69, 0x6e, 0x74, 0x28, 0x76, // codeNormalUint(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // ec3 _normal).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, // eturn _normal * 
	0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // 0.5 + 0.5;.}.vec
	0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x55, 0x69, // 3 decodeNormalUi
	0x6e, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, // nt(vec3 _encoded
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // Normal).{.return
	0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, //  _encodedNormal 
	0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // * 2.0 - 1.0;.}.v
	0x65, 0x63, 0x32, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // ec2 encodeNormal
	0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // SphereMap(vec3 _
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // normal).{.return
	0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, //  normalize(_norm
	0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, 0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x5f, 0x6e, // al.xy) * sqrt(_n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, // ormal.z * 0.5 + 
	0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, // 0.5);.}.vec3 dec
	0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x68, 0x65, 0x72, 0x65, 0x4d, // odeNormalSphereM
	0x61, 0x70, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, // ap(vec2 _encoded
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // Normal).{.float 
	0x7a, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // zz = dot(_encode
	0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2c, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // dNormal, _encode
	0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, // dNormal) * 2.0 -
	0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, //  1.0;.return vec
	0x33, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x65, 0x6e, 0x63, // 3(normalize(_enc
	0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x20, 0x2a, // odedNormal.xy) *
	0x20, 0x73, 0x71, 0x72, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x7a, 0x7a, 0x2a, 0x7a, //  sqrt(1.0 - zz*z
	0x7a, 0x29, 0x2c, 0x20, 0x7a, 0x7a, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, // z), zz);.}.vec2 
	0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x76, // octahedronWrap(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // ec2 _val).{.retu
	0x72, 0x6e, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, // rn (1.0 - abs(_v
	0x61, 0x6c, 0x2e, 0x79, 0x78, 0x29, 0x20, 0x29, 0x0a, 0x2a, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x76, // al.yx) ).* mix(v
	0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x2d, 0x31, 0x2e, 0x30, 0x29, 0x2c, // ec2_splat(-1.0),
	0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x29, //  vec2_splat(1.0)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, // , vec2(greaterTh
	0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x2c, // anEqual(_val.xy,
	0x20, 0x76, 0x65, 0x63, 0x32, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, //  vec2_splat(0.0)
	0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x65, //  ) ) );.}.vec2 e
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x63, 0x74, 0x61, 0x68, // ncodeNormalOctah
	0x65, 0x64, 0x72, 0x6f, 0x6e, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, // edron(vec3 _norm
	0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2f, 0x3d, // al).{._normal /=
	0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, //  abs(_normal.x) 
	0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, 0x29, // + abs(_normal.y)
	0x20, 0x2b, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, //  + abs(_normal.z
	0x29, 0x3b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, // );._normal.xy = 
	0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, // _normal.z >= 0.0
	0x20, 0x3f, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3a, 0x20, //  ? _normal.xy : 
	0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, 0x72, 0x61, 0x70, 0x28, 0x5f, // octahedronWrap(_
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x5f, 0x6e, 0x6f, 0x72, // normal.xy);._nor
	0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, // mal.xy = _normal
	0x2e, 0x78, 0x79, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, // .xy * 0.5 + 0.5;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, // .return _normal.
	0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x64, 0x65, 0x63, 0x6f, 0x64, // xy;.}.vec3 decod
	0x65, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, // eNormalOctahedro
	0x6e, 0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, // n(vec2 _encodedN
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, 0x0a, 0x7b, 0x0a, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, // ormal).{._encode
	0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x3d, 0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, // dNormal = _encod
	0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, // edNormal * 2.0 -
	0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //  1.0;.vec3 norma
	0x6c, 0x3b, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x31, 0x2e, // l;.normal.z = 1.
	0x30, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, // 0 - abs(_encoded
	0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x29, 0x20, 0x2d, 0x20, 0x61, 0x62, 0x73, 0x28, // Normal.x) - abs(
	0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x79, // _encodedNormal.y
	0x29, 0x3b, 0x0a, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x78, 0x79, 0x20, 0x3d, 0x20, 0x6e, // );.normal.xy = n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, 0x7a, 0x20, 0x3e, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x20, 0x3f, // ormal.z >= 0.0 ?
	0x20, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2e, //  _encodedNormal.
	0x78, 0x79, 0x20, 0x3a, 0x20, 0x6f, 0x63, 0x74, 0x61, 0x68, 0x65, 0x64, 0x72, 0x6f, 0x6e, 0x57, // xy : octahedronW
	0x72, 0x61, 0x70, 0x28, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, // rap(_encodedNorm
	0x61, 0x6c, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6e, // al.xy);.return n
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x29, // ormalize(normal)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, // ;.}.vec3 convert
	0x52, 0x47, 0x42, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, // RGB2XYZ(vec3 _rg
	0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x78, // b).{.vec3 xyz;.x
	0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, // yz.x = dot(vec3(
	0x30, 0x2e, 0x34, 0x31, 0x32, 0x34, 0x35, 0x36, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x35, 0x37, // 0.4124564, 0.357
	0x35, 0x37, 0x36, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x30, 0x34, 0x33, 0x37, 0x35, 0x29, // 5761, 0.1804375)
	0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, // , _rgb);.xyz.y =
	0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, 0x36, //  dot(vec3(0.2126
	0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, 0x20, // 729, 0.7151522, 
	0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, // 0.0721750), _rgb
	0x29, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, // );.xyz.z = dot(v
	0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x30, 0x31, 0x39, 0x33, 0x33, 0x33, 0x39, 0x2c, 0x20, 0x30, // ec3(0.0193339, 0
	0x2e, 0x31, 0x31, 0x39, 0x31, 0x39, 0x32, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x35, 0x30, 0x33, // .1191920, 0.9503
	0x30, 0x34, 0x31, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 041), _rgb);.ret
	0x75, 0x72, 0x6e, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn xyz;.}.vec3 
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, // convertXYZ2RGB(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, // ec3 _xyz).{.vec3
	0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, //  rgb;.rgb.x = do
	0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x20, 0x33, 0x2e, 0x32, 0x34, 0x30, 0x34, 0x35, 0x34, // t(vec3( 3.240454
	0x32, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x35, 0x33, 0x37, 0x31, 0x33, 0x38, 0x35, 0x2c, 0x20, 0x2d, // 2, -1.5371385, -
	0x30, 0x2e, 0x34, 0x39, 0x38, 0x35, 0x33, 0x31, 0x34, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, // 0.4985314), _xyz
	0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, // );.rgb.y = dot(v
	0x65, 0x63, 0x33, 0x28, 0x2d, 0x30, 0x2e, 0x39, 0x36, 0x39, 0x32, 0x36, 0x36, 0x30, 0x2c, 0x20, // ec3(-0.9692660, 
	0x31, 0x2e, 0x38, 0x37, 0x36, 0x30, 0x31, 0x30, 0x38, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x34, 0x31, // 1.8760108, 0.041
	0x35, 0x35, 0x36, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x67, // 5560), _xyz);.rg
	0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x20, // b.z = dot(vec3( 
	0x30, 0x2e, 0x30, 0x35, 0x35, 0x36, 0x34, 0x33, 0x34, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x30, // 0.0556434, -0.20
	0x34, 0x30, 0x32, 0x35, 0x39, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x37, 0x32, 0x32, 0x35, 0x32, // 40259, 1.0572252
	0x29, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // ), _xyz);.return
	0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, //  rgb;.}.vec3 con
	0x76, 0x65, 0x72, 0x74, 0x58, 0x59, 0x5a, 0x32, 0x59, 0x78, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, // vertXYZ2Yxy(vec3
	0x20, 0x5f, 0x78, 0x79, 0x7a, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x69, //  _xyz).{.float i
	0x6e, 0x76, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x78, 0x79, // nv = 1.0/dot(_xy
	0x7a, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, // z, vec3(1.0, 1.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // , 1.0) );.return
	0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x2c, 0x20, 0x5f, 0x78, //  vec3(_xyz.y, _x
	0x79, 0x7a, 0x2e, 0x78, 0x2a, 0x69, 0x6e, 0x76, 0x2c, 0x20, 0x5f, 0x78, 0x79, 0x7a, 0x2e, 0x79, // yz.x*inv, _xyz.y
	0x2a, 0x69, 0x6e, 0x76, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, // *inv);.}.vec3 co
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x76, 0x65, 0x63, // nvertYxy2XYZ(vec
	0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x78, // 3 _Yxy).{.vec3 x
	0x79, 0x7a, 0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, 0x79, // yz;.xyz.x = _Yxy
	0x2e, 0x78, 0x2a, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x79, 0x2f, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, // .x*_Yxy.y/_Yxy.z
	0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, // ;.xyz.y = _Yxy.x
	0x3b, 0x0a, 0x78, 0x79, 0x7a, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x78, // ;.xyz.z = _Yxy.x
	0x2a, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x79, 0x20, 0x2d, // *(1.0 - _Yxy.y -
	0x20, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x29, 0x2f, 0x5f, 0x59, 0x78, 0x79, 0x2e, 0x7a, 0x3b, //  _Yxy.z)/_Yxy.z;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // .return xyz;.}.v
	0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, // ec3 convertRGB2Y
	0x78, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, // xy(vec3 _rgb).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, 0x59, // return convertXY
	0x5a, 0x32, 0x59, 0x78, 0x79, 0x28, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, // Z2Yxy(convertRGB
	0x32, 0x58, 0x59, 0x5a, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // 2XYZ(_rgb) );.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, 0x79, 0x32, // vec3 convertYxy2
	0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x0a, 0x7b, // RGB(vec3 _Yxy).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x58, // .return convertX
	0x59, 0x5a, 0x32, 0x52, 0x47, 0x42, 0x28, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x78, // YZ2RGB(convertYx
	0x79, 0x32, 0x58, 0x59, 0x5a, 0x28, 0x5f, 0x59, 0x78, 0x79, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, // y2XYZ(_Yxy) );.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, 0x42, // .vec3 convertRGB
	0x32, 0x59, 0x75, 0x76, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, // 2Yuv(vec3 _rgb).
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x79, 0x75, 0x76, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, // {.vec3 yuv;.yuv.
	0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, // x = dot(_rgb, ve
	0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x39, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, // c3(0.299, 0.587,
	0x20, 0x30, 0x2e, 0x31, 0x31, 0x34, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x79, 0x75, 0x76, 0x2e, 0x79, //  0.114) );.yuv.y
	0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x79, 0x75, 0x76, //  = (_rgb.x - yuv
	0x2e, 0x78, 0x29, 0x2a, 0x30, 0x2e, 0x37, 0x31, 0x33, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, // .x)*0.713 + 0.5;
	0x0a, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2e, 0x7a, // .yuv.z = (_rgb.z
	0x20, 0x2d, 0x20, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x29, 0x2a, 0x30, 0x2e, 0x35, 0x36, 0x34, 0x20, //  - yuv.x)*0.564 
	0x2b, 0x20, 0x30, 0x2e, 0x35, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x79, 0x75, // + 0.5;.return yu
	0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, // v;.}.vec3 conver
	0x74, 0x59, 0x75, 0x76, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x79, // tYuv2RGB(vec3 _y
	0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, // uv).{.vec3 rgb;.
	0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2b, // rgb.x = _yuv.x +
	0x20, 0x31, 0x2e, 0x34, 0x30, 0x33, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x79, 0x2d, 0x30, //  1.403*(_yuv.y-0
	0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, // .5);.rgb.y = _yu
	0x76, 0x2e, 0x78, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x33, 0x34, 0x34, 0x2a, 0x28, 0x5f, 0x79, 0x75, // v.x - 0.344*(_yu
	0x76, 0x2e, 0x79, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x34, // v.y-0.5) - 0.714
	0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x2d, 0x30, 0x2e, 0x35, 0x29, 0x3b, 0x0a, 0x72, // *(_yuv.z-0.5);.r
	0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x78, 0x20, 0x2b, 0x20, // gb.z = _yuv.x + 
	0x31, 0x2e, 0x37, 0x37, 0x33, 0x2a, 0x28, 0x5f, 0x79, 0x75, 0x76, 0x2e, 0x7a, 0x2d, 0x30, 0x2e, // 1.773*(_yuv.z-0.
	0x35, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, // 5);.return rgb;.
	0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x47, // }.vec3 convertRG
	0x42, 0x32, 0x59, 0x49, 0x51, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // B2YIQ(vec3 _rgb)
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x79, 0x69, 0x71, 0x3b, 0x0a, 0x79, 0x69, 0x71, // .{.vec3 yiq;.yiq
	0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, // .x = dot(vec3(0.
	0x32, 0x39, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x35, 0x38, 0x37, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x31, // 299, 0.587, 0.11
	0x34, 0x20, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, // 4 ), _rgb);.yiq.
	0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x35, // y = dot(vec3(0.5
	0x39, 0x35, 0x37, 0x31, 0x36, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x37, 0x34, 0x34, 0x35, 0x33, // 95716, -0.274453
	0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x33, 0x32, 0x31, 0x32, 0x36, 0x33, 0x29, 0x2c, 0x20, 0x5f, 0x72, // , -0.321263), _r
	0x67, 0x62, 0x29, 0x3b, 0x0a, 0x79, 0x69, 0x71, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, // gb);.yiq.z = dot
	0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x31, 0x34, 0x35, 0x36, 0x2c, 0x20, // (vec3(0.211456, 
	0x2d, 0x30, 0x2e, 0x35, 0x32, 0x32, 0x35, 0x39, 0x31, 0x2c, 0x20, 0x30, 0x2e, 0x33, 0x31, 0x31, // -0.522591, 0.311
	0x31, 0x33, 0x35, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, // 135), _rgb);.ret
	0x75, 0x72, 0x6e, 0x20, 0x79, 0x69, 0x71, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // urn yiq;.}.vec3 
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x59, 0x49, 0x51, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, // convertYIQ2RGB(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x79, 0x69, 0x71, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, // ec3 _yiq).{.vec3
	0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, //  rgb;.rgb.x = do
	0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x39, 0x35, // t(vec3(1.0, 0.95
	0x36, 0x33, 0x2c, 0x20, 0x30, 0x2e, 0x36, 0x32, 0x31, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, // 63, 0.6210), _yi
	0x71, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // q);.rgb.y = dot(
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x32, 0x37, 0x32, // vec3(1.0, -0.272
	0x31, 0x2c, 0x20, 0x2d, 0x30, 0x2e, 0x36, 0x34, 0x37, 0x34, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, // 1, -0.6474), _yi
	0x71, 0x29, 0x3b, 0x0a, 0x72, 0x67, 0x62, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, // q);.rgb.z = dot(
	0x76, 0x65, 0x63, 0x33, 0x28, 0x31, 0x2e, 0x30, 0x2c, 0x20, 0x2d, 0x31, 0x2e, 0x31, 0x30, 0x37, // vec3(1.0, -1.107
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x37, 0x30, 0x34, 0x36, 0x29, 0x2c, 0x20, 0x5f, 0x79, 0x69, 0x71, // 0, 1.7046), _yiq
	0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, // );.return rgb;.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x76, // .vec3 toLinear(v
	0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, // ec3 _rgb).{.retu
	0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, // rn pow(abs(_rgb)
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x32, 0x2e, 0x32, // , vec3_splat(2.2
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x4c, 0x69, // ) );.}.vec4 toLi
	0x6e, 0x65, 0x61, 0x72, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, // near(vec4 _rgba)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, // .{.return vec4(t
	0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, // oLinear(_rgba.xy
	0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // z), _rgba.w);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, // vec3 toLinearAcc
	0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // urate(vec3 _rgb)
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x6f, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, // .{.vec3 lo = _rg
	0x62, 0x20, 0x2f, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // b / 12.92;.vec3 
	0x68, 0x69, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x20, // hi = pow( (_rgb 
	0x2b, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x29, 0x20, 0x2f, 0x20, 0x31, 0x2e, 0x30, 0x35, 0x35, // + 0.055) / 1.055
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x32, 0x2e, 0x34, // , vec3_splat(2.4
	0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, // ) );.vec3 rgb = 
	0x6d, 0x69, 0x78, 0x28, 0x68, 0x69, 0x2c, 0x20, 0x6c, 0x6f, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, // mix(hi, lo, vec3
	0x28, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, // (lessThanEqual(_
	0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, // rgb, vec3_splat(
	0x30, 0x2e, 0x30, 0x34, 0x30, 0x34, 0x35, 0x29, 0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, // 0.04045) ) ) );.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // return rgb;.}.ve
	0x63, 0x34, 0x20, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, // c4 toLinearAccur
	0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, // ate(vec4 _rgba).
	0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, // {.return vec4(to
	0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x5f, // LinearAccurate(_
	0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, // rgba.xyz), _rgba
	0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6f, 0x47, // .w);.}.float toG
	0x61, 0x6d, 0x6d, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x72, 0x29, 0x0a, 0x7b, // amma(float _r).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, // .return pow(abs(
	0x5f, 0x72, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x32, 0x29, 0x3b, 0x0a, 0x7d, // _r), 1.0/2.2);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, 0x65, // .vec3 toGamma(ve
	0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // c3 _rgb).{.retur
	0x6e, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x2c, // n pow(abs(_rgb),
	0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, 0x2e, 0x30, 0x2f, //  vec3_splat(1.0/
	0x32, 0x2e, 0x32, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, // 2.2) );.}.vec4 t
	0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, // oGamma(vec4 _rgb
	0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // a).{.return vec4
	0x28, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, // (toGamma(_rgba.x
	0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, // yz), _rgba.w);.}
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, // .vec3 toGammaAcc
	0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // urate(vec3 _rgb)
	0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x6f, 0x20, 0x3d, 0x20, 0x5f, 0x72, 0x67, // .{.vec3 lo = _rg
	0x62, 0x20, 0x2a, 0x20, 0x31, 0x32, 0x2e, 0x39, 0x32, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // b * 12.92;.vec3 
	0x68, 0x69, 0x20, 0x3d, 0x20, 0x70, 0x6f, 0x77, 0x28, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x72, 0x67, // hi = pow(abs(_rg
	0x62, 0x29, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, // b), vec3_splat(1
	0x2e, 0x30, 0x2f, 0x32, 0x2e, 0x34, 0x29, 0x20, 0x29, 0x20, 0x2a, 0x20, 0x31, 0x2e, 0x30, 0x35, // .0/2.4) ) * 1.05
	0x35, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x35, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, // 5 - 0.055;.vec3 
	0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x68, 0x69, 0x2c, 0x20, 0x6c, 0x6f, // rgb = mix(hi, lo
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x6c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x45, // , vec3(lessThanE
	0x71, 0x75, 0x61, 0x6c, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, // qual(_rgb, vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x30, 0x33, 0x31, 0x33, 0x30, 0x38, 0x29, // splat(0.0031308)
	0x20, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x72, //  ) ) );.return r
	0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, // gb;.}.vec4 toGam
	0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x74, 0x65, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // maAccurate(vec4 
	0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // _rgba).{.return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x41, 0x63, 0x63, 0x75, // vec4(toGammaAccu
	0x72, 0x61, 0x74, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, // rate(_rgba.xyz),
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, //  _rgba.w);.}.vec
	0x33, 0x20, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x76, 0x65, 0x63, // 3 toReinhard(vec
	0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, // 3 _rgb).{.return
	0x20, 0x74, 0x6f, 0x47, 0x61, 0x6d, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2f, 0x28, 0x5f, //  toGamma(_rgb/(_
	0x72, 0x67, 0x62, 0x2b, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x31, // rgb+vec3_splat(1
	0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // .0) ) );.}.vec4 
	0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, // toReinhard(vec4 
	0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, // _rgba).{.return 
	0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x52, 0x65, 0x69, 0x6e, 0x68, 0x61, 0x72, 0x64, 0x28, // vec4(toReinhard(
	0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, // _rgba.xyz), _rgb
	0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x46, // a.w);.}.vec3 toF
	0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, // ilmic(vec3 _rgb)
	0x0a, 0x7b, 0x0a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x76, 0x65, // .{._rgb = max(ve
	0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x5f, // c3_splat(0.0), _
	0x72, 0x67, 0x62, 0x20, 0x2d, 0x20, 0x30, 0x2e, 0x30, 0x30, 0x34, 0x29, 0x3b, 0x0a, 0x5f, 0x72, // rgb - 0.004);._r
	0x67, 0x62, 0x20, 0x3d, 0x20, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, // gb = (_rgb*(6.2*
	0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x20, 0x29, 0x20, 0x2f, 0x20, // _rgb + 0.5) ) / 
	0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x36, 0x2e, 0x32, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, // (_rgb*(6.2*_rgb 
	0x2b, 0x20, 0x31, 0x2e, 0x37, 0x29, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x30, 0x36, 0x29, 0x3b, 0x0a, // + 1.7) + 0.06);.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // return _rgb;.}.v
	0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, // ec4 toFilmic(vec
	0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // 4 _rgba).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, // n vec4(toFilmic(
	0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, // _rgba.xyz), _rgb
	0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x74, 0x6f, 0x41, // a.w);.}.vec3 toA
	0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // cesFilmic(vec3 _
	0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x61, 0x20, // rgb).{.float aa 
	0x3d, 0x20, 0x32, 0x2e, 0x35, 0x31, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x62, // = 2.51f;.float b
	0x62, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x30, 0x33, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // b = 0.03f;.float
	0x20, 0x63, 0x63, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x34, 0x33, 0x66, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, //  cc = 2.43f;.flo
	0x61, 0x74, 0x20, 0x64, 0x64, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x35, 0x39, 0x66, 0x3b, 0x0a, 0x66, // at dd = 0.59f;.f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x65, 0x65, 0x20, 0x3d, 0x20, 0x30, 0x2e, 0x31, 0x34, 0x66, 0x3b, // loat ee = 0.14f;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x28, 0x28, 0x5f, // .return clamp((_
	0x72, 0x67, 0x62, 0x2a, 0x28, 0x61, 0x61, 0x2a, 0x5f, 0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x62, // rgb*(aa*_rgb + b
	0x62, 0x29, 0x20, 0x29, 0x2f, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x2a, 0x28, 0x63, 0x63, 0x2a, 0x5f, // b) )/(_rgb*(cc*_
	0x72, 0x67, 0x62, 0x20, 0x2b, 0x20, 0x64, 0x64, 0x29, 0x20, 0x2b, 0x20, 0x65, 0x65, 0x29, 0x20, // rgb + dd) + ee) 
	0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, // , 0.0, 1.0);.}.v
	0x65, 0x63, 0x34, 0x20, 0x74, 0x6f, 0x41, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, // ec4 toAcesFilmic
	0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, // (vec4 _rgba).{.r
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x74, 0x6f, 0x41, 0x63, 0x65, // eturn vec4(toAce
	0x73, 0x46, 0x69, 0x6c, 0x6d, 0x69, 0x63, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, // sFilmic(_rgba.xy
	0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, // z), _rgba.w);.}.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // vec3 luma(vec3 _
	0x72, 0x67, 0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x79, 0x79, 0x20, // rgb).{.float yy 
	0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x31, 0x32, // = dot(vec3(0.212
	0x36, 0x37, 0x32, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x31, 0x35, 0x31, 0x35, 0x32, 0x32, 0x2c, // 6729, 0.7151522,
	0x20, 0x30, 0x2e, 0x30, 0x37, 0x32, 0x31, 0x37, 0x35, 0x30, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, //  0.0721750), _rg
	0x62, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x5f, // b);.return vec3_
	0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x79, 0x79, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, // splat(yy);.}.vec
	0x34, 0x20, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, // 4 luma(vec4 _rgb
	0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, // a).{.return vec4
	0x28, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, // (luma(_rgba.xyz)
	0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // , _rgba.w);.}.ve
	0x63, 0x33, 0x20, 0x63, 0x6f, 0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x76, 0x65, 0x63, // c3 conSatBri(vec
	0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, 0x73, // 3 _rgb, vec3 _cs
	0x62, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, // b).{.vec3 rgb = 
	0x5f, 0x72, 0x67, 0x62, 0x20, 0x2a, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x7a, 0x3b, 0x0a, 0x72, // _rgb * _csb.z;.r
	0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x6c, 0x75, 0x6d, 0x61, 0x28, 0x72, 0x67, // gb = mix(luma(rg
	0x62, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x79, 0x29, // b), rgb, _csb.y)
	0x3b, 0x0a, 0x72, 0x67, 0x62, 0x20, 0x3d, 0x20, 0x6d, 0x69, 0x78, 0x28, 0x76, 0x65, 0x63, 0x33, // ;.rgb = mix(vec3
	0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, 0x2c, 0x20, 0x72, 0x67, 0x62, // _splat(0.5), rgb
	0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // , _csb.x);.retur
	0x6e, 0x20, 0x72, 0x67, 0x62, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, // n rgb;.}.vec4 co
	0x6e, 0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, // nSatBri(vec4 _rg
	0x62, 0x61, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x0a, 0x7b, // ba, vec3 _csb).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x63, 0x6f, 0x6e, // .return vec4(con
	0x53, 0x61, 0x74, 0x42, 0x72, 0x69, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, // SatBri(_rgba.xyz
	0x2c, 0x20, 0x5f, 0x63, 0x73, 0x62, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, // , _csb), _rgba.w
	0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, // );.}.vec3 poster
	0x69, 0x7a, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x2c, 0x20, 0x66, // ize(vec3 _rgb, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, // loat _numColors)
	0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x28, // .{.return floor(
	0x5f, 0x72, 0x67, 0x62, 0x2a, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, // _rgb*_numColors)
	0x20, 0x2f, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x3b, 0x0a, 0x7d, //  / _numColors;.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, // .vec4 posterize(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, // vec4 _rgba, floa
	0x74, 0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x0a, 0x7b, 0x0a, // t _numColors).{.
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x70, 0x6f, 0x73, 0x74, // return vec4(post
	0x65, 0x72, 0x69, 0x7a, 0x65, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x78, 0x79, 0x7a, 0x2c, // erize(_rgba.xyz,
	0x20, 0x5f, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x29, 0x2c, 0x20, 0x5f, 0x72, //  _numColors), _r
	0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x73, // gba.w);.}.vec3 s
	0x65, 0x70, 0x69, 0x61, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x0a, // epia(vec3 _rgb).
	0x7b, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x63, 0x6f, // {.vec3 color;.co
	0x6c, 0x6f, 0x72, 0x2e, 0x78, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, // lor.x = dot(_rgb
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x39, 0x33, 0x2c, 0x20, 0x30, 0x2e, // , vec3(0.393, 0.
	0x37, 0x36, 0x39, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x38, 0x39, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x63, // 769, 0.189) );.c
	0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, // olor.y = dot(_rg
	0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x33, 0x34, 0x39, 0x2c, 0x20, 0x30, // b, vec3(0.349, 0
	0x2e, 0x36, 0x38, 0x36, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x36, 0x38, 0x29, 0x20, 0x29, 0x3b, 0x0a, // .686, 0.168) );.
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x7a, 0x20, 0x3d, 0x20, 0x64, 0x6f, 0x74, 0x28, 0x5f, 0x72, // color.z = dot(_r
	0x67, 0x62, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x32, 0x37, 0x32, 0x2c, 0x20, // gb, vec3(0.272, 
	0x30, 0x2e, 0x35, 0x33, 0x34, 0x2c, 0x20, 0x30, 0x2e, 0x31, 0x33, 0x31, 0x29, 0x20, 0x29, 0x3b, // 0.534, 0.131) );
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, // .return color;.}
	0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x65, 0x70, 0x69, 0x61, 0x28, 0x76, 0x65, 0x63, 0x34, // .vec4 sepia(vec4
	0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, //  _rgba).{.return
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x73, 0x65, 0x70, 0x69, 0x61, 0x28, 0x5f, 0x72, 0x67, 0x62, //  vec4(sepia(_rgb
	0x61, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2e, 0x77, 0x29, // a.xyz), _rgba.w)
	0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, // ;.}.vec3 blendOv
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, // erlay(vec3 _base
	0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, // , vec3 _blend).{
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, // .vec3 lt = 2.0 *
	0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x3b, //  _base * _blend;
	0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x67, 0x74, 0x65, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, // .vec3 gte = 1.0 
	0x2d, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, // - 2.0 * (1.0 - _
	0x62, 0x61, 0x73, 0x65, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x5f, // base) * (1.0 - _
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, // blend);.return m
	0x69, 0x78, 0x28, 0x6c, 0x74, 0x2c, 0x20, 0x67, 0x74, 0x65, 0x2c, 0x20, 0x73, 0x74, 0x65, 0x70, // ix(lt, gte, step
	0x28, 0x76, 0x65, 0x63, 0x33, 0x5f, 0x73, 0x70, 0x6c, 0x61, 0x74, 0x28, 0x30, 0x2e, 0x35, 0x29, // (vec3_splat(0.5)
	0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // , _base) );.}.ve
	0x63, 0x34, 0x20, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x28, // c4 blendOverlay(
	0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x34, // vec4 _base, vec4
	0x20, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, //  _blend).{.retur
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, // n vec4(blendOver
	0x6c, 0x61, 0x79, 0x28, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x78, 0x79, 0x7a, 0x2c, 0x20, 0x5f, // lay(_base.xyz, _
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x2e, 0x78, 0x79, 0x7a, 0x29, 0x2c, 0x20, 0x5f, 0x62, 0x61, 0x73, // blend.xyz), _bas
	0x65, 0x2e, 0x77, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x61, 0x64, 0x6a, // e.w);.}.vec3 adj
	0x75, 0x73, 0x74, 0x48, 0x75, 0x65, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x72, 0x67, 0x62, // ustHue(vec3 _rgb
	0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x68, 0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, // , float _hue).{.
	0x76, 0x65, 0x63, 0x33, 0x20, 0x79, 0x69, 0x71, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, // vec3 yiq = conve
	0x72, 0x74, 0x52, 0x47, 0x42, 0x32, 0x59, 0x49, 0x51, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x29, 0x3b, // rtRGB2YIQ(_rgb);
	0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x5f, // .float angle = _
	0x68, 0x75, 0x65, 0x20, 0x2b, 0x20, 0x61, 0x74, 0x61, 0x6e, 0x28, 0x79, 0x69, 0x71, 0x2e, 0x7a, // hue + atan(yiq.z
	0x2c, 0x20, 0x79, 0x69, 0x71, 0x2e, 0x79, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // , yiq.y);.float 
	0x6c, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x79, 0x69, 0x71, // len = length(yiq
	0x2e, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6e, // .yz);.return con
	0x76, 0x65, 0x72, 0x74, 0x59, 0x49, 0x51, 0x32, 0x52, 0x47, 0x42, 0x28, 0x76, 0x65, 0x63, 0x33, // vertYIQ2RGB(vec3
	0x28, 0x79, 0x69, 0x71, 0x2e, 0x78, 0x2c, 0x20, 0x6c, 0x65, 0x6e, 0x2a, 0x63, 0x6f, 0x73, 0x28, // (yiq.x, len*cos(
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x2c, 0x20, 0x6c, 0x65, 0x6e, 0x2a, 0x73, 0x69, 0x6e, 0x28, // angle), len*sin(
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, // angle) ) );.}.ve
	0x63, 0x34, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x54, 0x6f, 0x52, 0x67, // c4 packFloatToRg
	0x62, 0x61, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, // ba(float _value)
	0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x73, 0x68, // .{.const vec4 sh
	0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x32, 0x35, 0x36, 0x20, 0x2a, // ift = vec4(256 *
	0x20, 0x32, 0x35, 0x36, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, 0x36, 0x20, //  256 * 256, 256 
	0x2a, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x32, 0x35, 0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, // * 256, 256, 1.0)
	0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x6d, 0x61, 0x73, // ;.const vec4 mas
	0x6b, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, // k = vec4(0, 1.0 
	0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, // / 256.0, 1.0 / 2
	0x35, 0x36, 0x2e, 0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, // 56.0, 1.0 / 256.
	0x30, 0x29, 0x3b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x3d, 0x20, // 0);.vec4 comp = 
	0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2a, 0x20, 0x73, // fract(_value * s
	0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x2d, 0x3d, 0x20, 0x63, // hift);.comp -= c
	0x6f, 0x6d, 0x70, 0x2e, 0x78, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3b, // omp.xxyz * mask;
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, // .return comp;.}.
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x52, 0x67, 0x62, 0x61, // float unpackRgba
	0x54, 0x6f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x76, 0x65, 0x63, 0x34, 0x20, 0x5f, 0x72, 0x67, // ToFloat(vec4 _rg
	0x62, 0x61, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x34, // ba).{.const vec4
	0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, //  shift = vec4(1.
	0x30, 0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, // 0 / (256.0 * 256
	0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, // .0 * 256.0), 1.0
	0x20, 0x2f, 0x20, 0x28, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x20, 0x2a, 0x20, 0x32, 0x35, 0x36, 0x2e, //  / (256.0 * 256.
	0x30, 0x29, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x2c, // 0), 1.0 / 256.0,
	0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, 0x6f, //  1.0);.return do
	0x74, 0x28, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x2c, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, // t(_rgba, shift);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, // .}.vec2 packHalf
	0x46, 0x6c, 0x6f, 0x61, 0x74, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x76, 0x61, 0x6c, // Float(float _val
	0x75, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, // ue).{.const vec2
	0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x32, 0x35, //  shift = vec2(25
	0x36, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x76, // 6, 1.0);.const v
	0x65, 0x63, 0x32, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, // ec2 mask = vec2(
	0x30, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, 0x29, 0x3b, // 0, 1.0 / 256.0);
	0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, // .vec2 comp = fra
	0x63, 0x74, 0x28, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x2a, 0x20, 0x73, 0x68, 0x69, 0x66, // ct(_value * shif
	0x74, 0x29, 0x3b, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x20, 0x2d, 0x3d, 0x20, 0x63, 0x6f, 0x6d, 0x70, // t);.comp -= comp
	0x2e, 0x78, 0x78, 0x20, 0x2a, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, // .xx * mask;.retu
	0x72, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x3b, 0x0a, 0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, // rn comp;.}.float
	0x20, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6c, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, //  unpackHalfFloat
	0x28, 0x76, 0x65, 0x63, 0x32, 0x20, 0x5f, 0x72, 0x67, 0x29, 0x0a, 0x7b, 0x0a, 0x63, 0x6f, 0x6e, // (vec2 _rg).{.con
	0x73, 0x74, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x20, 0x3d, 0x20, // st vec2 shift = 
	0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2f, 0x20, 0x32, 0x35, 0x36, 0x2e, 0x30, // vec2(1.0 / 256.0
	0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x64, // , 1.0);.return d
	0x6f, 0x74, 0x28, 0x5f, 0x72, 0x67, 0x2c, 0x20, 0x73, 0x68, 0x69, 0x66, 0x74, 0x29, 0x3b, 0x0a, // ot(_rg, shift);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x28, 0x76, // }.float random(v
	0x65, 0x63, 0x32, 0x20, 0x5f, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, // ec2 _uv).{.retur
	0x6e, 0x20, 0x66, 0x72, 0x61, 0x63, 0x74, 0x28, 0x73, 0x69, 0x6e, 0x28, 0x64, 0x6f, 0x74, 0x28, // n fract(sin(dot(
	0x5f, 0x75, 0x76, 0x2e, 0x78, 0x79, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x31, 0x32, 0x2e, // _uv.xy, vec2(12.
	0x39, 0x38, 0x39, 0x38, 0x2c, 0x20, 0x37, 0x38, 0x2e, 0x32, 0x33, 0x33, 0x29, 0x20, 0x29, 0x20, // 9898, 78.233) ) 
	0x29, 0x20, 0x2a, 0x20, 0x34, 0x33, 0x37, 0x35, 0x38, 0x2e, 0x35, 0x34, 0x35, 0x33, 0x29, 0x3b, // ) * 43758.5453);
	0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x66, 0x69, 0x78, 0x43, 0x75, 0x62, 0x65, 0x4c, // .}.vec3 fixCubeL
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x28, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, 0x76, 0x2c, 0x20, 0x66, // ookup(vec3 _v, f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, 0x6c, 0x6f, 0x64, 0x2c, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, // loat _lod, float
	0x20, 0x5f, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, //  _topLevelCubeSi
	0x7a, 0x65, 0x29, 0x0a, 0x7b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x78, 0x20, 0x3d, // ze).{.float ax =
	0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x78, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, //  abs(_v.x);.floa
	0x74, 0x20, 0x61, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, 0x28, 0x5f, 0x76, 0x2e, 0x79, 0x29, // t ay = abs(_v.y)
	0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x61, 0x7a, 0x20, 0x3d, 0x20, 0x61, 0x62, 0x73, // ;.float az = abs
	0x28, 0x5f, 0x76, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x76, 0x6d, // (_v.z);.float vm
	0x61, 0x78, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, 0x28, 0x6d, 0x61, 0x78, 0x28, 0x61, 0x78, 0x2c, // ax = max(max(ax,
	0x20, 0x61, 0x79, 0x29, 0x2c, 0x20, 0x61, 0x7a, 0x29, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, //  ay), az);.float
	0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x65, //  scale = 1.0 - e
	0x78, 0x70, 0x32, 0x28, 0x5f, 0x6c, 0x6f, 0x64, 0x29, 0x20, 0x2f, 0x20, 0x5f, 0x74, 0x6f, 0x70, // xp2(_lod) / _top
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x75, 0x62, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x3b, 0x0a, 0x69, // LevelCubeSize;.i
	0x66, 0x20, 0x28, 0x61, 0x78, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, // f (ax != vmax) {
	0x20, 0x5f, 0x76, 0x2e, 0x78, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, //  _v.x *= scale; 
	0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x79, 0x20, 0x21, 0x3d, 0x20, 0x76, 0x6d, 0x61, 0x78, // }.if (ay != vmax
	0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x79, 0x20, 0x2a, 0x3d, 0x20, 0x73, 0x63, 0x61, 0x6c, // ) { _v.y *= scal
	0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x69, 0x66, 0x20, 0x28, 0x61, 0x7a, 0x20, 0x21, 0x3d, 0x20, 0x76, // e; }.if (az != v
	0x6d, 0x61, 0x78, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x76, 0x2e, 0x7a, 0x20, 0x2a, 0x3d, 0x20, 0x73, // max) { _v.z *= s
	0x63, 0x61, 0x6c, 0x65, 0x3b, 0x20, 0x7d, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, // cale; }.return _
	0x76, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x32, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, // v;.}.vec2 textur
	0x65, 0x32, 0x44, 0x42, 0x63, 0x35, 0x28, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // e2DBc5(sampler2D
	0x20, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, //  _sampler, vec2 
	0x5f, 0x75, 0x76, 0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x65, // _uv).{.return te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x28, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2c, 0x20, // xture(_sampler, 
	0x5f, 0x75, 0x76, 0x29, 0x2e, 0x78, 0x79, 0x3b, 0x0a, 0x7d, 0x0a, 0x6d, 0x61, 0x74, 0x33, 0x20, // _uv).xy;.}.mat3 
	0x63, 0x6f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x6d, // cofactor(mat4 _m
	0x29, 0x0a, 0x7b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, 0x61, 0x74, 0x33, 0x28, // ).{.return mat3(
	0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, // ._m[1][1]*_m[2][
	0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, // 2]-_m[1][2]*_m[2
	0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, // ][1],._m[1][2]*_
	0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, // m[2][0]-_m[1][0]
	0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, // *_m[2][2],._m[1]
	0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, // [0]*_m[2][1]-_m[
	0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2c, 0x0a, // 1][1]*_m[2][0],.
	0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, // _m[0][2]*_m[2][1
	0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, // ]-_m[0][1]*_m[2]
	0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, // [2],._m[0][0]*_m
	0x5b, 0x32, 0x5d, 0x5b, 0x32, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, // [2][2]-_m[0][2]*
	0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, // _m[2][0],._m[0][
	0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, // 1]*_m[2][0]-_m[0
	0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x32, 0x5d, 0x5b, 0x31, 0x5d, 0x2c, 0x0a, 0x5f, // ][0]*_m[2][1],._
	0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, // m[0][1]*_m[1][2]
	0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, // -_m[0][2]*_m[1][
	0x31, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x32, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, // 1],._m[0][2]*_m[
	0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, 0x5d, 0x2a, 0x5f, // 1][0]-_m[0][0]*_
	0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x32, 0x5d, 0x2c, 0x0a, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, 0x5b, 0x30, // m[1][2],._m[0][0
	0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x31, 0x5d, 0x2d, 0x5f, 0x6d, 0x5b, 0x30, 0x5d, // ]*_m[1][1]-_m[0]
	0x5b, 0x31, 0x5d, 0x2a, 0x5f, 0x6d, 0x5b, 0x31, 0x5d, 0x5b, 0x30, 0x5d, 0x0a, 0x29, 0x3b, 0x0a, // [1]*_m[1][0].);.
	0x7d, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6f, 0x43, 0x6c, 0x69, 0x70, 0x53, 0x70, // }.float toClipSp
	0x61, 0x63, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x28, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x5f, // aceDepth(float _
	0x64, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5a, 0x29, 0x0a, 0x7b, // depthTextureZ).{
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x54, 0x65, // .return _depthTe
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5a, 0x20, 0x2a, 0x20, 0x32, 0x2e, 0x30, 0x20, 0x2d, 0x20, 0x31, // xtureZ * 2.0 - 1
	0x2e, 0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x63, 0x6c, 0x69, 0x70, 0x54, // .0;.}.vec3 clipT
	0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x28, 0x6d, 0x61, 0x74, 0x34, 0x20, 0x5f, 0x69, 0x6e, 0x76, // oWorld(mat4 _inv
	0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x2c, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x5f, // ViewProj, vec3 _
	0x63, 0x6c, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x29, 0x0a, 0x7b, 0x0a, 0x76, 0x65, 0x63, 0x34, 0x20, // clipPos).{.vec4 
	0x77, 0x70, 0x6f, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x5f, 0x69, 0x6e, 0x76, 0x56, 0x69, // wpos = ( (_invVi
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, 0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, // ewProj) * (vec4(
	0x5f, 0x63, 0x6c, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, // _clipPos, 1.0) )
	0x20, 0x29, 0x3b, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x77, 0x70, 0x6f, 0x73, 0x2e, //  );.return wpos.
	0x78, 0x79, 0x7a, 0x20, 0x2f, 0x20, 0x77, 0x70, 0x6f, 0x73, 0x2e, 0x77, 0x3b, 0x0a, 0x7d, 0x0a, // xyz / wpos.w;.}.
	0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x67, 0x6c, // void main().{.gl
	0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x28, 0x20, 0x28, 0x75, // _Position = ( (u
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x29, 0x20, // _modelViewProj) 
	0x2a, 0x20, 0x28, 0x76, 0x65, 0x63, 0x34, 0x28, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, // * (vec4(a_positi
	0x6f, 0x6e, 0x2c, 0x20, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x29, 0x20, 0x29, 0x3b, 0x0a, 0x76, 0x5f, // on, 1.0) ) );.v_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // color0 = a_color
	0x30, 0x3b, 0x0a, 0x7d, 0x0a, 0x00,                                                             // 0;.}..
};
